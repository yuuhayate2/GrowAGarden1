local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local SoundService = game:GetService("SoundService")

-- === Mini Loading Screen ===
local loadingGui = Instance.new("ScreenGui", PlayerGui)
loadingGui.Name = "LoadingScreen"
loadingGui.ResetOnSpawn = false

local loadingFrame = Instance.new("Frame", loadingGui)
loadingFrame.Size = UDim2.new(0, 250, 0, 120)
loadingFrame.Position = UDim2.new(0.5, -125, 0.5, -60)
loadingFrame.AnchorPoint = Vector2.new(0.5, 0.5)
loadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
loadingFrame.BorderSizePixel = 0

local logo = Instance.new("TextLabel", loadingFrame)
logo.Size = UDim2.new(0, 80, 0, 80)
logo.Position = UDim2.new(0.5, -40, 0.1, 0)
logo.BackgroundTransparency = 1
logo.Text = "K"
logo.TextColor3 = Color3.fromRGB(0, 170, 255)
logo.Font = Enum.Font.GothamBlack
logo.TextScaled = true

local loadingText = Instance.new("TextLabel", loadingFrame)
loadingText.Size = UDim2.new(1, -10, 0, 30)
loadingText.Position = UDim2.new(0, 5, 0.7, 0)
loadingText.BackgroundTransparency = 1
loadingText.TextColor3 = Color3.new(1,1,1)
loadingText.Font = Enum.Font.Gotham
loadingText.TextScaled = true
loadingText.Text = "🔄 Loading..."

task.spawn(function()
	local angle = 0
	while loadingFrame.Parent do
		logo.Rotation = angle
		angle = (angle + 2) % 360
		task.wait(0.03)
	end
end)

task.wait(3)
for i = 0, 1, 0.05 do
	loadingFrame.BackgroundTransparency = i
	logo.TextTransparency = i
	loadingText.TextTransparency = i
	task.wait(0.02)
end
loadingGui:Destroy()

-- === ESP Logic Setup ===
local eggToPets = {
	["Egg1"] = {"Dog", "Bunny"},
	["Egg2"] = {"Dragon", "Unicorn"},
}
local petIcons = {
	Dog = "rbxassetid://12345",
	Bunny = "rbxassetid://12346",
	Dragon = "rbxassetid://12347",
	Unicorn = "rbxassetid://12348",
}

local espList = {}
local function clearESP()
	for _, gui in ipairs(espList) do
		if gui and gui.Parent then gui:Destroy() end
	end
	espList = {}
end

local function createESP(part, name, hatchable)
	local gui = Instance.new("BillboardGui", part)
	gui.Name = "EggESP"
	gui.Size = UDim2.new(0, 120, 0, 50)
	gui.StudsOffset = Vector3.new(0, 2, 0)
	gui.AlwaysOnTop = true

	local icon = Instance.new("ImageLabel", gui)
	icon.Size = UDim2.new(0, 30, 0, 30)
	icon.Position = UDim2.new(0, 0, 0, 0)
	icon.BackgroundTransparency = 1
	icon.Image = petIcons[name] or ""

	local label = Instance.new("TextLabel", gui)
	label.Size = UDim2.new(1, -30, 0.6, 0)
	label.Position = UDim2.new(0.3, 0, 0, 0)
	label.BackgroundTransparency = 1
	label.Text = name
	label.Font = Enum.Font.GothamBold
	label.TextScaled = true
	label.TextColor3 = Color3.new(1,1,1)

	local status = Instance.new("TextLabel", gui)
	status.Size = UDim2.new(1, 0, 0.4, 0)
	status.Position = UDim2.new(0, 0, 0.6, 0)
	status.BackgroundTransparency = 1
	status.Text = hatchable and "✅ Hatchable" or "❌ Not Hatchable"
	status.Font = Enum.Font.Gotham
	status.TextScaled = true
	status.TextColor3 = hatchable and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)

	table.insert(espList, gui)
end

local function predictPets()
	clearESP()
	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("Model") and eggToPets[obj.Name] then
			local part = obj:FindFirstChildWhichIsA("BasePart")
			if part then
				local pets = eggToPets[obj.Name]
				local chosen = pets[math.random(1, #pets)]
				createESP(part, chosen, math.random() > 0.5)
			end
		end
	end
end

-- === GUI Setup ===
local gui = Instance.new("ScreenGui", PlayerGui)
gui.Name = "EggESP_UI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 250, 0, 140)
frame.Position = UDim2.new(0, 10, 0.4, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

-- 🔵 Glowing Border
local stroke = Instance.new("UIStroke", frame)
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(0, 170, 255)
local gradient = Instance.new("UIGradient", stroke)
gradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 50))
}

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 25)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "🤖 Pet Predictor By Kuni"
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(0, 170, 255)

-- 🔮 Predict Button
local predictBtn = Instance.new("TextButton", frame)
predictBtn.Size = UDim2.new(0.9, 0, 0.45, 0)
predictBtn.Position = UDim2.new(0.05, 0, 0.35, 0)
predictBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
predictBtn.Text = "🔮 Predict Pets"
predictBtn.Font = Enum.Font.GothamBold
predictBtn.TextScaled = true
predictBtn.TextColor3 = Color3.new(1,1,1)

-- 🟦 Button Glow
local bstroke = Instance.new("UIStroke", predictBtn)
bstroke.Thickness = 2
bstroke.Color = Color3.fromRGB(0, 255, 255)
local bgrad = Instance.new("UIGradient", bstroke)
bgrad.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0,200,255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0,120,255))
}

-- 🔊 Sound on click
local clickSound = Instance.new("Sound", SoundService)
clickSound.SoundId = "rbxassetid://9118823102"
clickSound.Volume = 1

-- 🔘 Predict logic with RGB
predictBtn.MouseButton1Click:Connect(function()
	clickSound:Play()
	local h = 0
	local running = true
	local thread = task.spawn(function()
		while running do
			h = (h + 0.01) % 1
			predictBtn.BackgroundColor3 = Color3.fromHSV(h, 1, 1)
			task.wait(0.02)
		end
	end)
	predictPets()
	task.wait(8)
	running = false
	predictBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
end)
